stages:
  - build
  - test
  - deploy
  - test:deploy

# Sonarqube Quality check
sonarqube-check:
  stage: test
  image: gradle:7.2.0-jdk11-hotspot
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd ./backend
    - gradle sonarqube
  allow_failure: true
  only:
    changes:
      - backend/**/*

# Push Frontend with Tag Version and latest tag
push_frontend:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    CI_REGISTRY: https://index.docker.io/v1/
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(echo -n ${DOCKER_HUB_LOGIN}:${DOCKER_HUB_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --destination "${DOCKER_HUB_LOGIN}/frontend:${CI_COMMIT_TAG}"
      --destination "${DOCKER_HUB_LOGIN}/frontend:latest"
  only:
    - tags


# Push Backend with Tag Version and latest tag
push_backend:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    CI_REGISTRY: https://index.docker.io/v1/
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(echo -n ${DOCKER_HUB_LOGIN}:${DOCKER_HUB_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "${DOCKER_HUB_LOGIN}/backend:${CI_COMMIT_TAG}"
      --destination "${DOCKER_HUB_LOGIN}/backend:latest"
  only:
    - tags

# Run end to end tests in Cypress after deployment
cypress-end-to-end:
  image: cypress/browsers:node12.14.1-chrome85-ff81
  stage: test:deploy
  parallel: 2
  script:
    # switch to frontend dir
    - cd ./frontend
    # install dependencies
    - yarn install --frozen-lockfile
    # add dependency for xpath
    - yarn add cypress-xpath --dev
    # update browser db
    - npx browserslist@latest --update-db
    # run Cypress tests
    - npx cypress run --record --key ${CYPRESS_KEY} --group e2e-test --parallel
  when: manual
  artifacts:
    when: always
    paths:
      - frontend/cypress/videos/**/*.mp4
    expire_in: 1 day
